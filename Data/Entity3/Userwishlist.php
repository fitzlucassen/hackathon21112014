<?php 
	/**********************************************************
	 **** File generated by fitzlucassen\DALGenerator tool ****
	 * All right reserved to fitzlucassen repository on github*
	 ************* https://github.com/fitzlucassen ************
	 **********************************************************/
	namespace fitzlucassen\FLFramework\Data\Entity;

	use fitzlucassen\FLFramework\Library\Core as cores;

	class Userwishlist {
		private $_id;
		private $_user;
		private $_idUser;
		private $_letterurl;
		private $_creationdate;
		private $_queryBuilder;

		public function __construct($id = "", $idUser = "", $letterurl = "", $creationdate = ""){
			$this->_queryBuilder = new cores\QueryBuilder(true);
			$this->fillObject(array("id" => $id, "idUser" => $idUser, "letterurl" => $letterurl, "creationdate" => $creationdate));
		}

		/***********
		 * GETTERS *
		 ***********/
		public function getId() {
			return $this->_id;
		}
		public function getUser() {
			$query = $this->_queryBuilder->select() 
											  ->from("user")
											  ->where(array(array("link" => "", "left" => "id", "operator" => "=", "right" => $this->_idUser)))->getQuery();
			try {
				$result = $this->_pdo->Select($query);
				$o = new User();
				$o->fillObject($result);
				return $o;
			}
			catch(PDOException $e){
				print $e->getMessage();
			}
			return array();
		}

		public function getIdUser() {
			return $this->_idUser;
		}
		public function getLetterurl() {
			return $this->_letterurl;
		}
		public function getCreationdate() {
			return $this->_creationdate;
		}
		/*******
		 * END *
		 *******/

		public function fillObject($properties) {
			if(!empty($properties["id"]))
				$this->_id = $properties["id"];
			if(!empty($properties["idUser"]))
				$this->_idUser = $properties["idUser"];
			if(!empty($properties["letterurl"]))
				$this->_letterurl = $properties["letterurl"];
			if(!empty($properties["creationdate"]))
				$this->_creationdate = $properties["creationdate"];
		}
	}
