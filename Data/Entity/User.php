<?php 
	/**********************************************************
	 **** File generated by fitzlucassen\DALGenerator tool ****
	 * All right reserved to fitzlucassen repository on github*
	 ************* https://github.com/fitzlucassen ************
	 **********************************************************/
	namespace fitzlucassen\FLFramework\Data\Entity;

	use fitzlucassen\FLFramework\Library\Core as cores;

	class User {
		private $_id;
		private $_childfirstname;
		private $_childlastname;
		private $_age;
		private $_email;
		private $_password;
		private $_creationdate;
		private $_user_wishlists;
		private $_queryBuilder;

		public function __construct($id = "", $childfirstname = "", $childlastname = "", $age = "", $email = "", $password = "", $creationdate = ""){
			$this->_queryBuilder = new cores\QueryBuilder(true);
			$this->fillObject(array("id" => $id, "childfirstname" => $childfirstname, "childlastname" => $childlastname, "age" => $age, "email" => $email, "password" => $password, "creationdate" => $creationdate));
		}

		/***********
		 * GETTERS *
		 ***********/
		public function getId() {
			return $this->_id;
		}
		public function getChildfirstname() {
			return $this->_childfirstname;
		}
		public function getChildlastname() {
			return $this->_childlastname;
		}
		public function getAge() {
			return $this->_age;
		}
		public function getEmail() {
			return $this->_email;
		}
		public function getPassword() {
			return $this->_password;
		}
		public function getCreationdate() {
			return $this->_creationdate;
		}
		public function getUser_wishlists() {
			$query = $this->_queryBuilder->select() 
											  ->from("user_wishlist")
											  ->where(array(array("link" => "", "left" => "idUser", "operator" => "=", "right" => $this->_id)))->getQuery();
			try {
				$result = $this->_pdo->SelectTable($query);
				$array = array();
				foreach ($result as $object){
					$o = new User_wishlist();
					$o->fillObject($object);
					$array[] = $o;
				}
				return $array;
			}
			catch(PDOException $e){
				print $e->getMessage();
			}
			return array();
		}

		/*******
		 * END *
		 *******/

		public function fillObject($properties) {
			if(!empty($properties["id"]))
				$this->_id = $properties["id"];
			if(!empty($properties["childfirstname"]))
				$this->_childfirstname = $properties["childfirstname"];
			if(!empty($properties["childlastname"]))
				$this->_childlastname = $properties["childlastname"];
			if(!empty($properties["age"]))
				$this->_age = $properties["age"];
			if(!empty($properties["email"]))
				$this->_email = $properties["email"];
			if(!empty($properties["password"]))
				$this->_password = $properties["password"];
			if(!empty($properties["creationdate"]))
				$this->_creationdate = $properties["creationdate"];
		}
	}
